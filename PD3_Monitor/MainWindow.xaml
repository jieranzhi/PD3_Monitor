<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:helix="http://helix-toolkit.org/wpf"
        xmlns:local="clr-namespace:PD3_Monitor"
        xmlns:awe="http://schemas.awesomium.com/winfx" 
        xmlns:System="clr-namespace:System;assembly=mscorlib" 
        xmlns:d3="http://research.microsoft.com/DynamicDataDisplay/1.0"
        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
        x:Name="Window_monitor" x:Class="PD3_Monitor.MainWindow"
        
        mc:Ignorable="d"
        Title="PD3 Acceleration Monitor" Height="942.5" Width="1619" Icon="Martz90-Circle-Addon2-Plane-flight.ico" Background="#FF000223" Closing="Window_monitor_Closing" WindowStartupLocation="CenterScreen" WindowState="Maximized" Loaded="Window_monitor_Loaded" Style="{DynamicResource WindowStyle_pd3}" WindowStyle="None">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--<LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFF0F0F0" Offset="0.0"/>
            <GradientStop Color="#FFE5E5E5" Offset="1.0"/>
        </LinearGradientBrush>-->
        <SolidColorBrush x:Key="ComboBox.Static.Background" Color="#FF565656"/>
        <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFACACAC"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FF565656"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="#FF565656"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFECF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FF565656"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFEBF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAECFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FF565656"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAEBFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FF565656"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060"/>
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" BorderBrush="{StaticResource ComboBox.Static.Border}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource ComboBox.Static.Background}" SnapsToDevicePixels="true">
                            <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <Path x:Name="arrow" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" Fill="{StaticResource ComboBox.Static.Glyph}" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="#FF565656"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF565656"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="#FF565656"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF565656"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                            <ScrollViewer x:Name="DropDownScrollViewer" Background="#FF565656">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="#FF565656" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FF565656"/>
        <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ScrollViewer x:Name="PART_ContentHost" Background="#FF565656" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="#FF565656" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <Border x:Name="border" Background="#FF565656" Margin="{TemplateBinding BorderThickness}">
                    <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="true">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="ComboBoxStyle1" TargetType="{x:Type ComboBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="#FF565656"/>
            <Setter Property="BorderBrush" Value="#FF565656"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Padding" Value="6,3,5,3"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
            <Style.Triggers>
                <Trigger Property="IsEditable" Value="true">
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Padding" Value="2"/>
                    <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHover.Background" Color="#FF565656"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHover.Border" Color="#A826A0DA"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelected.Background" Color="#FF565656"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelected.Border" Color="#FF565656"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedHover.Background" Color="#FF565656"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedHover.Border" Color="#FF565656"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedNoFocus.Background" Color="#FF565656"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedNoFocus.Border" Color="#FF565656"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewFocus.Border" Color="#FF26A0DA"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHoverFocus.Background" Color="#FF565656"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHoverFocus.Border" Color="#FF26A0DA"/>
        <Style x:Key="ComboBoxItemStyle1" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Padding" Value="4,1"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="#FF565656"/>
            <Setter Property="BorderBrush" Value="#FF565656"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="#FF565656" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsKeyboardFocused" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="#FF565656"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewHover.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="False"/>
                                    <Condition Property="IsKeyboardFocused" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="#FF565656"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="#FF565656"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="#FF565656"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="#FF565656"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="False"/>
                                    <Condition Property="IsKeyboardFocused" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="#FF565656"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="#FF565656"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False"/>
                                    <Condition Property="IsMouseOver" Value="False"/>
                                    <Condition Property="IsKeyboardFocused" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewFocus.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsKeyboardFocused" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="#FF565656"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewHoverFocus.Border}"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelected.Background2" Color="#3D26A0DA"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelected.Border2" Color="#FF26A0DA"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedHover.Background2" Color="#2E0080FF"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedHover.Border2" Color="#99006CD9"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedNoFocus.Background2" Color="#3DDADADA"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedNoFocus.Border2" Color="#FFDADADA"/>
        <Style x:Key="ComboBoxItemStyle2" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Padding" Value="4,1"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="#FF565656"/>
            <Setter Property="BorderBrush" Value="#FF565656"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsKeyboardFocused" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewHover.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewHover.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="False"/>
                                    <Condition Property="IsKeyboardFocused" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelected.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelected.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelectedHover.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelectedHover.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="False"/>
                                    <Condition Property="IsKeyboardFocused" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelectedNoFocus.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelectedNoFocus.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False"/>
                                    <Condition Property="IsMouseOver" Value="False"/>
                                    <Condition Property="IsKeyboardFocused" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewFocus.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsKeyboardFocused" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewHoverFocus.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewHoverFocus.Border}"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="DarkGray"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="WindowTemplateKey" TargetType="{x:Type Window}">
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                <Grid>
                    <AdornerDecorator>
                        <ContentPresenter/>
                    </AdornerDecorator>
                    <ResizeGrip x:Name="WindowResizeGrip" HorizontalAlignment="Right" IsTabStop="false" Visibility="Collapsed" VerticalAlignment="Bottom"/>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="ResizeMode" Value="CanResizeWithGrip"/>
                        <Condition Property="WindowState" Value="Normal"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Visibility" TargetName="WindowResizeGrip" Value="Visible"/>
                </MultiTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="WindowStyle_pd3" TargetType="{x:Type Window}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Window}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="Black">
                            <AdornerDecorator>
                                <ContentPresenter/>
                            </AdornerDecorator>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                    <Setter Property="Template" Value="{StaticResource WindowTemplateKey}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Window.BorderBrush>
        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="Black" Offset="1"/>
            <GradientStop Color="#FF8D8D8D"/>
        </LinearGradientBrush>
    </Window.BorderBrush>
    <Grid x:Name="Grid_main" Background="Black">
        <Grid.RowDefinitions>
            <RowDefinition Height="642*"/>
            <RowDefinition Height="269*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="182"/>
            <ColumnDefinition Width="7"/>
            <ColumnDefinition Width="110*"/>
            <ColumnDefinition Width="7*"/>
        </Grid.ColumnDefinitions>
        <StackPanel x:Name="DockPanel_Control" HorizontalAlignment="Left" Width="183" Margin="-1,0,0,0" Grid.RowSpan="2" Background="#FF444444">
            <WrapPanel x:Name="wrap_panel_source" Height="71" VerticalAlignment="Top" Margin="0">
                <Label x:Name="label" Content="&gt;&gt; Source" VerticalAlignment="Top" HorizontalAlignment="Left" Width="183" Background="#FF282828" Foreground="#FFE4E4E4"/>
                <RadioButton x:Name="radioButton_serial" Content="Serial Port" VerticalAlignment="Top" HorizontalAlignment="Left" Width="165" Margin="10,5,0,0" IsChecked="True" Checked="radioButton_serial_Checked" Foreground="#FFE4E4E4"/>
                <RadioButton x:Name="radioButton_bluetooth" Content="Bluetooth" VerticalAlignment="Bottom" Margin="10,5,0,0" Checked="radioButton_bluetooth_Checked" Width="161" Foreground="#FFE4E4E4" IsChecked="True"/>
            </WrapPanel>
            <WrapPanel
				Height="105" x:Name="wrap_panel_serialsetting" Margin="0,5,0,0"
				VerticalAlignment="Top" RenderTransformOrigin="0.506,0.54">
                <Label x:Name="label_Set" Content="&gt;&gt; Serial Setting" VerticalAlignment="Top" HorizontalAlignment="Left" Width="183" Background="#FF282828" Margin="0" Height="27" Foreground="#FFE4E4E4"/>
                <Label x:Name="label1" Content="Port:" VerticalAlignment="Top" Margin="10,2,0,0" Width="39" Foreground="#FFE4E4E4"/>
                <ComboBox x:Name="comboBox_Port" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="0,5,0,0" Width="99" Height="22" Background="#FF565656" Style="{DynamicResource ComboBoxStyle1}" ItemContainerStyle="{DynamicResource ComboBoxItemStyle2}"/>
                <Button x:Name="button_refresh_portlist" Content=" " Height="20" Width="20" RenderTransformOrigin="2.794,-0.289" Margin="5,2,0,0" BorderBrush="#FFE6E6E6" ToolTip="Refresh the port list" Click="button_refresh_portlist_Click" Style="{DynamicResource ButtonStyle1}" BorderThickness="0">
                    <Button.Background>
                        <ImageBrush ImageSource="Resources/refresh.png" Stretch="Uniform"/>
                    </Button.Background>
                </Button>
                <Label x:Name="label2" Content="Baud Rate:" VerticalAlignment="Top" Margin="10,0,0,0" Foreground="#FFE4E4E4"/>
                <ComboBox x:Name="comboBox_Baud" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="0,2,0,0" Width="81" Height="22" Background="#FF565656" Style="{DynamicResource ComboBoxStyle1}">
                    <ComboBoxItem Content="110" Background="#FF565656"/>
                    <ComboBoxItem Content="300" Background="#FF565656"/>
                    <ComboBoxItem Content="600" Background="#FF565656"/>
                    <ComboBoxItem Content="1200" Background="#FF565656"/>
                    <ComboBoxItem Content="2400" Background="#FF565656"/>
                    <ComboBoxItem Content="4800" Background="#FF565656"/>
                    <ComboBoxItem IsSelected="True" Content="9600" Background="#FF565656" />
                    <ComboBoxItem Content="14400" Background="#FF565656"/>
                    <ComboBoxItem Content="19200" Background="#FF565656"/>
                    <ComboBoxItem Content="38400" Background="#FF565656"/>
                    <ComboBoxItem Content="57600" Background="#FF565656"/>
                    <ComboBoxItem Content="115200" Background="#FF565656"/>
                    <ComboBoxItem Content="128000" Background="#FF565656"/>
                    <ComboBoxItem Content="256000" Background="#FF565656"/>
                </ComboBox>
                <Button x:Name="button_STARTEND" Content="START" Height="25" VerticalAlignment="Center" Click="button_STARTEND_Click" Background="#FF282828" Foreground="#FFE4E4E4" Style="{DynamicResource ButtonStyle1}" Margin="15,0" Width="149"/>
            </WrapPanel>
            <WrapPanel
            	Height="260" x:Name="wrap_panel_bluetoothsetting" Margin="0,5,0,0"
            	VerticalAlignment="Top" RenderTransformOrigin="0.506,0.54">
                <Label x:Name="label_Set1" Content="&gt;&gt; Bluetooth Setting" VerticalAlignment="Top" HorizontalAlignment="Left" Width="183" Background="#FF282828" Margin="0" Height="27" Foreground="#FFE4E4E4"/>
                <Label x:Name="label_device" Content="Device:" VerticalAlignment="Top" Margin="0" Foreground="#FFE4E4E4" HorizontalAlignment="Left" Width="55"/>
                <Label x:Name="label_device_selected" Content="" VerticalAlignment="Top" Margin="0" Foreground="#FFEE9427" Width="113" ToolTip="Selected device" HorizontalAlignment="Left" Padding="5,10,0,9" TextOptions.TextHintingMode="Animated" FontSize="10"/>
                <ListBox x:Name="listBox_bluetoothdevices" Height="100" Width="159" Background="#FF565656" Margin="10,0,0,0" MouseDoubleClick="listBox_bluetoothdevices_MouseDoubleClick" PreviewMouseLeftButtonUp="listBox_bluetoothdevices_PreviewMouseLeftButtonUp"/>
                <Button x:Name="button_bt_search" Content="Search" RenderTransformOrigin="-0.8,0.538" Background="#FF282828" Foreground="#FFE4E4E4" Height="22" Margin="10,5,10,0" Width="72" Click="button_bt_search_Click"/>
                <Button x:Name="button_bt_connect" Content="Connect" RenderTransformOrigin="-0.8,0.538" Background="#FF282828" Foreground="#FFE4E4E4" Height="22" Margin="5,5,10,0" Width="72" Click="button_bt_connect_Click"/>
                <Button x:Name="button_bt_start_streaming" Content="Start Streaming" RenderTransformOrigin="-0.8,0.538" Background="#FF282828" Foreground="#FFE4E4E4" Height="22" Margin="10,5,10,0" Width="159" Click="button_bt_start_streaming_Click"/>
                <Button x:Name="button_bt_stop_streaming" Content="Stop Streaming" RenderTransformOrigin="-0.8,0.538" Background="#FF282828" Foreground="#FFE4E4E4" Height="22" Margin="10,5,10,0" Width="159" Click="button_bt_stop_streaming_Click"/>
                <TextBlock x:Name="textBlock_bt_status" HorizontalAlignment="Left" TextWrapping="Wrap" Text="Status: disconnected" VerticalAlignment="Top" Foreground="#FFF7F7F7" Margin="5,5,0,0" FontSize="10"/>
            </WrapPanel>
            <WrapPanel x:Name="wrap_panel_serial_setting" VerticalAlignment="Top" Width="183" Height="59" Margin="0,5,0,0" RenderTransformOrigin="0.506,0.54">
                <Label x:Name="label_Set_Copy" Content="&gt;&gt; Sensors" VerticalAlignment="Top" HorizontalAlignment="Left" Width="183" Background="#FF282828" Margin="0" Foreground="#FFE4E4E4"/>
                <Label x:Name="label5" Content="Type: " Width="38" Margin="10,5,0,0" Foreground="#FFE4E4E4"/>
                <ComboBox x:Name="comboBox_hardware_list" Width="122" Margin="0,5,0,0" Height="22" Background="#FF565656" Style="{DynamicResource ComboBoxStyle1}" ItemContainerStyle="{DynamicResource ComboBoxItemStyle2}" SelectionChanged="comboBox_hardware_list_SelectionChanged">
                    <ComboBoxItem Content="MPU6500" IsSelected="True" Style="{DynamicResource ComboBoxItemStyle2}"/>
                    <ComboBoxItem  Content="LIS3DH" Style="{DynamicResource ComboBoxItemStyle2}"/>
                    <ComboBoxItem Content="AXDL362" Style="{DynamicResource ComboBoxItemStyle2}" />

                </ComboBox>
            </WrapPanel>
            <WrapPanel x:Name="wrap_panel_acceleramtersetting" VerticalAlignment="Top" Margin="0,5,0,0">
                <Label x:Name="label_Set_Copy1" Content="&gt;&gt; Accelerometer Setting" VerticalAlignment="Top" Background="#FF282828" Width="183" HorizontalAlignment="Left" Height="26" Foreground="#FFE4E4E4"/>
                <Label x:Name="label1_Copy" Content="Gravity (m/s" VerticalAlignment="Top" Margin="0,2,0,0" Width="70" Height="27" Foreground="#FFE4E4E4" Padding="5,5,0,5"/>
                <Label x:Name="label1_Copy2" Content="2" VerticalAlignment="Top" Margin="0,7,0,0" Width="4" RenderTransformOrigin="0.532,1.654" Padding="0,0,0,3" FontSize="8" Height="13" Foreground="White"/>
                <Label x:Name="label1_Copy1" Content="):" VerticalAlignment="Top" Margin="0,7,0,0" Width="11" RenderTransformOrigin="0.532,1.654" Padding="1,0,0,0" Foreground="#FFE4E4E4" Height="19"/>
                <TextBox x:Name="textBox_gravity" HorizontalAlignment="Left" Height="22" TextWrapping="Wrap" Text="9.80665" Width="69" VerticalAlignment="Top" Margin="0,5,0,0" TextAlignment="Center" Background="#FF565656"/>
                <CheckBox x:Name="checkBox_ignore_gravity" Content="" Height="14" Width="16" Margin="0,3,0,0" Checked="checkBox_ignore_gravity_Checked" Unchecked="checkBox_ignore_gravity_Unchecked" ToolTip="Ignore gravity" Background="#FF565656"/>
                <Label x:Name="label4" Content="Full Scale (g):  +/-" VerticalAlignment="Top" Margin="0" Width="102" Height="23" Foreground="#FFE4E4E4" Padding="5,5,5,0"/>
                <ComboBox x:Name="comboBox_FullScale" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="0,2,0,0" Width="67" SelectionChanged="comboBox_FullScale_SelectionChanged" Height="22" Background="#FF565656" Style="{DynamicResource ComboBoxStyle1}" ItemContainerStyle="{DynamicResource ComboBoxItemStyle2}">
                    <ComboBoxItem Content="2" IsSelected="True" Background="#FF565656" Style="{DynamicResource ComboBoxItemStyle1}"/>
                    <ComboBoxItem Content="4" Background="#FF565656"/>
                    <ComboBoxItem Content="8" Background="#FF565656"/>
                    <ComboBoxItem Content="16" Background="#FF565656"/>
                </ComboBox>
                <WrapPanel x:Name="wrap_panel_clk_sensitivity" HorizontalAlignment="Left" Height="28" VerticalAlignment="Top" Width="179">
                    <Label x:Name="label4_Copy1" Content="Clk Sensitivity (mg): " VerticalAlignment="Top" Margin="0,1,0,5" Width="111" Height="25" Foreground="#FFE4E4E4" Padding="5,5,0,0"/>
                    <TextBox x:Name="textBox_collision_sensitivity" HorizontalAlignment="Left" Height="22" TextWrapping="Wrap" Text="20" Width="34" VerticalAlignment="Top" TextAlignment="Center" Margin="0,5,0,0" Background="#FF565656"/>
                    <Button x:Name="button_apply_collision_sen" Content="A" Width="22" Height="23" Margin="1,2,0,0" Click="button_apply_collision_sen_Click" Background="#FF282828" Foreground="#FFE4E4E4" Style="{DynamicResource ButtonStyle1}" ToolTip="Apply"/>
                </WrapPanel>
            </WrapPanel>
            <WrapPanel x:Name="wrap_panel_gyroscopesetting" VerticalAlignment="Top" Height="55" Margin="0,5,0,0">
                <Label x:Name="label_Set_Copy2" Content="&gt;&gt; Gyroscope Setting" VerticalAlignment="Top" Background="#FF282828" Width="183" HorizontalAlignment="Left" Height="26" Foreground="#FFE4E4E4"/>
                <Label x:Name="label6" Content="Full Scale (o/s):  +/-" VerticalAlignment="Top" Margin="0" Width="113" Height="29" Foreground="#FFE4E4E4"/>
                <ComboBox x:Name="comboBox_GyroFullScale" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="0,2,0,0" Width="54"  Height="22" Background="#FF565656" Style="{DynamicResource ComboBoxStyle1}" ItemContainerStyle="{DynamicResource ComboBoxItemStyle2}" SelectionChanged="comboBox_GyroFullScale_SelectionChanged">
                    <ComboBoxItem Content="250" IsSelected="True" Background="#FF565656" Style="{DynamicResource ComboBoxItemStyle1}"/>
                    <ComboBoxItem Content="500" Background="#FF565656"/>
                    <ComboBoxItem Content="1000" Background="#FF565656"/>
                    <ComboBoxItem Content="2000" Background="#FF565656"/>
                </ComboBox>
            </WrapPanel>
            <Label x:Name="label_device_Copy" Content="Device:" VerticalAlignment="Top" Margin="0" Foreground="#FFE4E4E4" HorizontalAlignment="Left" Width="55"/>
        </StackPanel>
        <helix:HelixViewport3D x:Name="viewPort3d" ZoomExtentsWhenLoaded="true" Grid.Column="2" Grid.RowSpan="2" Grid.ColumnSpan="2" ShowCoordinateSystem="True" MouseRightButtonUp="viewPort3d_MouseRightButtonUp" Background="#00454545" MouseEnter="viewPort3d_MouseEnter">
            <!-- Remember to add light to the scene -->
            <helix:DefaultLights/>
            <helix:GridLinesVisual3D Width="180" Length="120" Thickness="0.1" MinorDistance="5" MajorDistance="10" Fill="Black"/>
        </helix:HelixViewport3D>
        <CheckBox x:Name="checkBox_autorotate" Content="Rotate Around Y" Grid.Column="2" HorizontalAlignment="Left" Margin="109,0,0,4" Grid.Row="1" VerticalAlignment="Bottom" Checked="checkBox_autorotate_Checked" Unchecked="checkBox_autorotate_Unchecked" Foreground="#FF00576F" Height="15" Width="122" Background="#FF042836" BorderBrush="#FF00586F">
            <CheckBox.Effect>
                <DropShadowEffect Color="White" ShadowDepth="0" Opacity="0.7" Direction="309" BlurRadius="2"/>
            </CheckBox.Effect>
        </CheckBox>
        <TextBlock x:Name="textBlock_output" Grid.Column="2" HorizontalAlignment="Left" TextWrapping="Wrap" VerticalAlignment="Top" Height="364" Width="551" FontSize="10" Foreground="#FF58BCCC" Opacity="0.8" Margin="3,10,0,0" FontFamily="MS Reference Sans Serif">
            <TextBlock.Effect>
                <DropShadowEffect BlurRadius="3" Color="Cyan" Direction="269" ShadowDepth="0"/>
            </TextBlock.Effect><Run Text="Info："/></TextBlock>
        <Button x:Name="button_dock" Content="&lt;" Grid.Column="1" Margin="0" BorderThickness="0" Grid.RowSpan="2" FontWeight="Bold" FontSize="8" RenderTransformOrigin="0.5,0.5" Foreground="#FF1E5F63" ToolTip="Click to expand/collapse" Click="button_dock_Click">
            <Button.Background>
                <SolidColorBrush Color="#FFDDDDDD" Opacity="0"/>
            </Button.Background>
            <Button.BorderBrush>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FF000A48" Offset="0"/>
                    <GradientStop Color="Black" Offset="1"/>
                </LinearGradientBrush>
            </Button.BorderBrush>
            <Button.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="0.033"/>
                    <TranslateTransform/>
                </TransformGroup>
            </Button.RenderTransform>
        </Button>
        <Image x:Name="image_plane" Height="21" Margin="0,10,10,0" VerticalAlignment="Top" Width="21" Cursor="Hand" ToolTip="Load a new model" MouseEnter="image_plane_MouseEnter" MouseLeave="image_plane_MouseLeave" MouseUp="image_plane_MouseUp" Grid.Column="3" RenderTransformOrigin="0.5,0.5" Opacity="0.2" HorizontalAlignment="Right" Source="pack://siteoforigin:,,,/Resources/planes.png">
            <Image.RenderTransform>
                <TransformGroup>
                    <ScaleTransform ScaleY="1" ScaleX="1"/>
                    <SkewTransform AngleY="0" AngleX="0"/>
                    <RotateTransform Angle="0"/>
                    <TranslateTransform/>
                </TransformGroup>
            </Image.RenderTransform>
        </Image>
        <Image x:Name="image_reset3dview" Grid.Column="3" Height="21" Margin="0,42,10,0" VerticalAlignment="Top" Width="21" HorizontalAlignment="Right" ToolTip="Reset 3D Viewport" Cursor="Hand" Opacity="0.2" MouseEnter="image_reset3dview_MouseEnter" MouseLeave="image_reset3dview_MouseLeave" MouseUp="image_reset3dview_MouseUp" Source="pack://siteoforigin:,,,/Resources/undo.png"/>
        <Image x:Name="image_showplot" Grid.Column="3" Height="21" Margin="0,72,10,0" VerticalAlignment="Top" Width="21" HorizontalAlignment="Right" ToolTip="Show/Hide the Acceleration Chart" Cursor="Hand" Opacity="0.2" MouseEnter="image_showplot_MouseEnter" MouseLeave="image_showplot_MouseLeave" MouseUp="image_showplot_MouseUp" Source="pack://siteoforigin:,,,/Resources/chart.png"/>
        <TextBlock x:Name="textBlock" Grid.Column="2" Margin="0,0,-95,188" TextWrapping="Wrap" Text="PD3 Wireless Accelerometer" Foreground="#FFB2B2B2" FontSize="16" FontWeight="Bold" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Right" Width="258" Grid.Row="1" Grid.ColumnSpan="2" VerticalAlignment="Bottom" Height="23">
            <TextBlock.Effect>
                <DropShadowEffect Color="#FF00A2FF" Direction="293" ShadowDepth="0" Opacity="0.6" BlurRadius="7"/>
            </TextBlock.Effect>
            <TextBlock.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="90"/>
                    <TranslateTransform/>
                </TransformGroup>
            </TextBlock.RenderTransform>
        </TextBlock>
        <TextBlock x:Name="textBlock1" Grid.Column="2" HorizontalAlignment="Right" Margin="0,0,-77,188" TextWrapping="Wrap" Text="A Project of Prof. Peter Dower, UoM 2016" VerticalAlignment="Bottom" Foreground="#FFB2B0B0" FontSize="9.333" RenderTransformOrigin="0.5,0.5" FontWeight="Bold" Width="258" Height="18" Grid.ColumnSpan="2" Grid.Row="1">
            <TextBlock.Effect>
                <DropShadowEffect Opacity="0.6" ShadowDepth="0" Color="#FF00A2FF" BlurRadius="7" Direction="293"/>
            </TextBlock.Effect>
            <TextBlock.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="90"/>
                    <TranslateTransform/>
                </TransformGroup>
            </TextBlock.RenderTransform>
        </TextBlock>
        <Grid x:Name="plotter_grid" Margin="0,15,37,0" Grid.Column="2"  HorizontalAlignment="Right" VerticalAlignment="Top" Grid.ColumnSpan="2" Height="445" Width="430" RenderTransformOrigin="0.512,0.427">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="5" />
                <RowDefinition />
            </Grid.RowDefinitions>

            <d3:ChartPlotter x:Name="plotter" Padding="0" Background="Black" BorderBrush="#58bccc" Foreground="#FF777778"  VerticalAlignment="Top"  Opacity="0.6"  KeyUp="plotter_KeyUp" HorizontalAlignment="Center"  UseLayoutRounding="True" RenderTransformOrigin="0.5,0.5" MaxWidth="100000" MouseEnter="plotter_MouseEnter" MouseLeave="plotter_MouseLeave" Margin="0,62,10,0" Height="104" Width="420" Grid.Row="2">
                <d3:ChartPlotter.HorizontalAxis>
                    <d3:HorizontalAxis Visibility="Hidden"/>
                </d3:ChartPlotter.HorizontalAxis>
            </d3:ChartPlotter>
            <d3:ChartPlotter x:Name="plotter_gyro" Padding="5,5,5,5" Background="Black" BorderBrush="#58bccc" Foreground="#FF8D8D8D"  Opacity="0.6" KeyUp="plotter_KeyUp" HorizontalAlignment="Center"  UseLayoutRounding="True" RenderTransformOrigin="0.5,0.5" MaxWidth="100000" MouseEnter="plotter_MouseEnter" MouseLeave="plotter_MouseLeave" Grid.Row="2" Margin="0,180,10,168" Width="420" Height="104">
                <d3:ChartPlotter.HorizontalAxis>
                    <d3:HorizontalAxis Visibility="Hidden"/>
                </d3:ChartPlotter.HorizontalAxis>
            </d3:ChartPlotter>
            <TextBlock x:Name="textBlock2" HorizontalAlignment="Left" TextWrapping="Wrap" Text="Data" VerticalAlignment="Top" Foreground="#FF58BCCC" FontSize="20" FontFamily="Nirmala UI" Grid.RowSpan="3" Margin="0,2,0,0"/>
            <TextBlock x:Name="textBlock2_Copy" HorizontalAlignment="Left" Margin="46,1,0,0" TextWrapping="Wrap" Text="Graphs" VerticalAlignment="Top" Foreground="#FF71EBFF" FontSize="25" FontFamily="Orator Std" Grid.Row="2">
                <TextBlock.Effect>
                    <DropShadowEffect Color="Black"/>
                </TextBlock.Effect>
            </TextBlock>
            <Label x:Name="label7" Content="Label" HorizontalAlignment="Left" Margin="145,2,0,0" VerticalAlignment="Top" Height="2" Width="89" Background="#FF6AE5F9" Grid.Row="2"/>
            <Label x:Name="label7_Copy" Content="Label" HorizontalAlignment="Left" Margin="234,2.5,0,0" VerticalAlignment="Top" Height="0.5" Width="89" Background="#FF6AE5F9" RenderTransformOrigin="0.5,0.5" Grid.Row="2">
                <Label.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleY="-1"/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Label.RenderTransform>
            </Label>
            <TextBlock x:Name="textBlock2_Copy1" HorizontalAlignment="Left" Margin="10,36,0,0" TextWrapping="Wrap" Text="Accel" VerticalAlignment="Top" Foreground="#FF71EBFF" FontFamily="Corbel" Grid.Row="2" FontWeight="Bold"/>
            <TextBlock x:Name="textBlock2_Copy2" HorizontalAlignment="Left" Margin="11,157,0,0" TextWrapping="Wrap" Text="Gyro" VerticalAlignment="Top" Foreground="#FF71EBFF" FontFamily="Corbel" Grid.Row="2" FontWeight="Bold" RenderTransformOrigin="0.72,-1.867"/>
            <TextBlock x:Name="textBlock2_Copy3" HorizontalAlignment="Left" Margin="10,396,0,0" TextWrapping="Wrap" Text="RSSI" VerticalAlignment="Top" Foreground="#FF71EBFF" FontFamily="Corbel" Grid.Row="2" FontWeight="Bold"/>
            <ProgressBar x:Name="progressBar_RSSI" HorizontalAlignment="Left" Height="6" Margin="29,424,0,0" Grid.Row="2" VerticalAlignment="Top" Width="390" BorderBrush="#FF204449" Background="Black" Foreground="#FF3AA9B8" Value="50"/>
            <TextBlock x:Name="textBlock2_Copy4" HorizontalAlignment="Left" Margin="405,395,0,0" TextWrapping="Wrap" Text="dB" VerticalAlignment="Top" Foreground="#FF71EBFF" FontFamily="Corbel" Grid.Row="2" FontWeight="Bold"/>
            <TextBlock x:Name="textBlock_rssi" HorizontalAlignment="Right" Margin="0,395,30,0" TextWrapping="Wrap" Text="-159" VerticalAlignment="Top" Foreground="#FF71EBFF" FontFamily="Calibri Light" Grid.Row="2" Width="42" TextAlignment="Right" FontStyle="Italic"/>
            <d3:ChartPlotter x:Name="plotter_orientation" Padding="5,5,5,5" Background="Black" BorderBrush="#58bccc" Foreground="#FF8D8D8D"  Opacity="0.6" KeyUp="plotter_KeyUp" HorizontalAlignment="Center"  UseLayoutRounding="True" RenderTransformOrigin="0.5,0.5" MaxWidth="100000" MouseEnter="plotter_MouseEnter" MouseLeave="plotter_MouseLeave" Grid.Row="2" Margin="0,291,10,57" Width="420" Height="104">
                <d3:ChartPlotter.HorizontalAxis>
                    <d3:HorizontalAxis Visibility="Hidden"/>
                </d3:ChartPlotter.HorizontalAxis>
            </d3:ChartPlotter>
            <TextBlock x:Name="textBlock2_Copy5" HorizontalAlignment="Left" Margin="11,269,0,0" TextWrapping="Wrap" Text="Orientation" VerticalAlignment="Top" Foreground="#FF71EBFF" FontFamily="Corbel" Grid.Row="2" FontWeight="Bold" RenderTransformOrigin="0.72,-1.867"/>

        </Grid>
        <Image x:Name="image_savedata" Grid.Column="3" HorizontalAlignment="Right" Height="21" Margin="0,112,10,0" VerticalAlignment="Top" Width="21" Opacity="0.2" MouseEnter="image_savedata_MouseEnter" MouseLeave="image_savedata_MouseLeave" MouseUp="image_savedata_MouseUp" Cursor="Hand" ToolTip="Save data to file" Source="pack://siteoforigin:,,,/Resources/save_as.png"/>

        <WrapPanel x:Name="wrappanel_para" VerticalAlignment="Bottom" Margin="354,0,0,3" Grid.Column="2" Grid.Row="1" HorizontalAlignment="Left" Width="565" Height="26" Visibility="Collapsed">
            <Label x:Name="label3" Content="Acceleration:  AX" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="10,0,0,0" Foreground="#FF005870">
                <Label.Effect>
                    <DropShadowEffect Color="White" Opacity="0.8" ShadowDepth="0" BlurRadius="2"/>
                </Label.Effect>
            </Label>
            <TextBox x:Name="textBox_X" TextWrapping="Wrap" VerticalAlignment="Top" Width="30" Margin="0,5,0,0" Text="0" TextAlignment="Center" Background="#FF052937" BorderBrush="#FF00576F" Foreground="#FFC9C9C9"/>
            <Label x:Name="label3_Copy" Content="AY" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="5,0,0,0" Foreground="#FF005870">
                <Label.Effect>
                    <DropShadowEffect Color="White" Opacity="0.8" ShadowDepth="0" BlurRadius="2"/>
                </Label.Effect>
            </Label>
            <TextBox x:Name="textBox_Y" TextWrapping="Wrap" VerticalAlignment="Top" Width="30"  Margin="0,5,0,0" Text="0" TextAlignment="Center" Background="#FF052937" BorderBrush="#FF00576F" Foreground="#FFC9C9C9"/>
            <Label x:Name="label3_Copy1" Content="AZ" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="5,0,0,0" Foreground="#FF005870">
                <Label.Effect>
                    <DropShadowEffect Color="White" Opacity="0.8" ShadowDepth="0" BlurRadius="2"/>
                </Label.Effect>
            </Label>
            <TextBox x:Name="textBox_Z" TextWrapping="Wrap" VerticalAlignment="Top" Width="30"  Margin="0,5,0,0" Text="1" TextAlignment="Center" Background="#FF052937" BorderBrush="#FF00576F" Foreground="#FFC9C9C9"/>
            <Label x:Name="label3_Copy2" Content="Gyro:  GX" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="10,0,0,0" Foreground="#FF005870">
                <Label.Effect>
                    <DropShadowEffect Color="White" Opacity="0.8" ShadowDepth="0" BlurRadius="2"/>
                </Label.Effect>
            </Label>
            <TextBox x:Name="textBox_GX" TextWrapping="Wrap" VerticalAlignment="Top" Width="30" Margin="0,5,0,0" Text="0" TextAlignment="Center" Background="#FF052937" BorderBrush="#FF00576F" Foreground="#FFC9C9C9"/>
            <Label x:Name="label3_Copy3" Content="GY" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="5,0,0,0" Foreground="#FF005870">
                <Label.Effect>
                    <DropShadowEffect Color="White" Opacity="0.8" ShadowDepth="0" BlurRadius="2"/>
                </Label.Effect>
            </Label>
            <TextBox x:Name="textBox_GY" TextWrapping="Wrap" VerticalAlignment="Top" Width="30"  Margin="0,5,0,0" Text="0" TextAlignment="Center" Background="#FF052937" BorderBrush="#FF00576F" Foreground="#FFC9C9C9"/>
            <Label x:Name="label3_Copy4" Content="GZ" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="5,0,0,0" Foreground="#FF005870">
                <Label.Effect>
                    <DropShadowEffect Color="White" Opacity="0.8" ShadowDepth="0" BlurRadius="2"/>
                </Label.Effect>
            </Label>
            <TextBox x:Name="textBox_GZ" TextWrapping="Wrap" VerticalAlignment="Top" Width="30"  Margin="0,5,0,0" Text="1" TextAlignment="Center" Background="#FF052937" BorderBrush="#FF00576F" Foreground="#FFC9C9C9"/>
            <Label x:Name="label3_Copy5" Content="Temp&#xD;&#xA;" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="5,0,0,0" Foreground="#FF005870">
                <Label.Effect>
                    <DropShadowEffect Color="White" Opacity="0.8" ShadowDepth="0" BlurRadius="2"/>
                </Label.Effect>
            </Label>
            <TextBox x:Name="textBox_DeviceTemp" TextWrapping="Wrap" VerticalAlignment="Top" Width="30"  Margin="0,5,0,0" Text="1" TextAlignment="Center" Background="#FF052937" BorderBrush="#FF00576F" Foreground="#FFC9C9C9"/>
        </WrapPanel>
        <CheckBox x:Name="checkBox_EstimateYaw" Content="Estimate Yaw" HorizontalAlignment="Left" Margin="5,0,0,4" VerticalAlignment="Bottom"  Foreground="#FF00576F" Height="15" Width="95" Background="#FF042836" BorderBrush="#FF00586F" Grid.Column="2" Grid.Row="1">
            <CheckBox.Effect>
                <DropShadowEffect Color="White" ShadowDepth="0" Opacity="0.7" Direction="309" BlurRadius="2"/>
            </CheckBox.Effect>
        </CheckBox>
        <Image x:Name="image_filter" Grid.Column="3" Height="20" Margin="0,151,10,0" VerticalAlignment="Top" Width="21" Opacity="0.2" ToolTip="Filters" MouseUp="image_filter_MouseUp" MouseEnter="image_filter_MouseEnter" MouseLeave="image_filter_MouseLeave" Source="Resources/filter.png" HorizontalAlignment="Right" Cursor="Hand">
            <Image.OpacityMask>
                <ImageBrush ImageSource="Resources/filter.png"/>
            </Image.OpacityMask>
        </Image>
        <Image x:Name="image_collision_test" Grid.Column="3" HorizontalAlignment="Right" Height="21" Margin="0,191,10,0" VerticalAlignment="Top" Width="21" Opacity="0.2" Cursor="Hand" ToolTip="Collision Test" Source="Resources/crash.png" MouseEnter="image_collision_test_MouseEnter" MouseLeave="image_collision_test_MouseLeave" MouseUp="image_collision_test_MouseUp" OpacityMask="Black"/>
        <CheckBox x:Name="checkBox_Showground" Content="Show Ground" HorizontalAlignment="Left" Margin="233,0,0,4" VerticalAlignment="Bottom"  Foreground="#FF00576F" Height="15" Width="95" Background="#FF042836" BorderBrush="#FF00586F" Grid.Column="2" Grid.Row="1" Checked="checkBox_Showground_Checked" Unchecked="checkBox_Showground_Unchecked">
            <CheckBox.Effect>
                <DropShadowEffect Color="White" ShadowDepth="0" Opacity="0.7" Direction="309" BlurRadius="2"/>
            </CheckBox.Effect>
        </CheckBox>
        <Button x:Name="button_calibaration" Content="CALIBARATION" VerticalContentAlignment="Center" VerticalAlignment="Bottom" Height="25" Click="button_calibaration_Click" Margin="9,0,10,59" Grid.Row="1" Background="#FF282828" Foreground="#FFE4E4E4" Style="{DynamicResource ButtonStyle1}"/>
        <TextBlock x:Name="textBlock_info" Height="19" TextWrapping="Wrap" Text="Ready" Margin="1,0,2,0" VerticalAlignment="Bottom" Grid.Row="1" Foreground="#FFDADADA"/>
        <TextBox x:Name="textBox_receiveingData" Grid.Column="2" HorizontalAlignment="Left" Height="198" Margin="5,0,0,70" Grid.Row="1" TextWrapping="Wrap" Text="Receiving Data..." VerticalAlignment="Bottom" Width="617" Background="{x:Null}" BorderBrush="Black" Foreground="#FF448D99" TextChanged="textBox_receiveingData_TextChanged"/>
        <Button x:Name="button_start" Content="START" Grid.Column="2" HorizontalAlignment="Right" Margin="0,0,0,9" Grid.Row="1" VerticalAlignment="Bottom" Width="75" RenderTransformOrigin="0,3.053" Height="30" Background="Black" BorderBrush="#FF23656E" Foreground="#FF23656E" Opacity="0.5" MouseEnter="button_start_MouseEnter" MouseLeave="button_start_MouseLeave" MouseDoubleClick="button_start_MouseDoubleClick">
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="2" CornerRadius="10,10,10,10" x:Name="PART_Background">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                <GradientStop Color="Black" Offset="0.0" />
                                <GradientStop Color="Black" Offset="0.5" />
                                <GradientStop Color="Black" Offset="0.0" />
                            </LinearGradientBrush>
                        </Border.Background>
                        <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Button.Template>
        </Button>




    </Grid>
</Window>
